name: Continuous Integration (CI)

on:
  push:
    branches:
      - main

env:
  PYTHON_VERSION: 3.9

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install pipx
      run: |
        python -m pip install pipx
        
    - name: Install poetry
      run: |
        pipx install poetry==1.2.0

    - name: Update version in pyproject.toml
      run: |
        version=$(date +%Y%m%d%H%M%S)
        echo "Updating version to $version"
        sed -i "s/^version.*/version = \"$version\"/" pyproject.toml

    - name: Build package
      run: poetry build

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: dist

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install poetry
      run: |
        pipx install poetry==1.2.0

    - name: Publish to PyPi 
      run: |
        poetry config pypi-token.pypi ${{ secrets.PYPI_API_KEY }} 
        poetry publish
